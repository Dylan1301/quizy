/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import * as axios from 'axios';
import type {
  AxiosError,
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  Arguments
} from 'swr'
import useSWRMutation from 'swr/mutation'
import type {
  SWRMutationConfiguration
} from 'swr/mutation'
import type {
  HTTPValidationError,
  StudentPublic,
  StudentRegister
} from '.././model'


  
  /**
 * @summary Student Join Room
 */
export const studentJoinRoomJoinRoomRoomIdPost = (
    roomId: string,
    studentRegister: StudentRegister, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<StudentPublic>> => {
    return axios.default.post(
      `/join/room/${roomId}`,
      studentRegister,options
    );
  }



export const getStudentJoinRoomJoinRoomRoomIdPostMutationFetcher = (roomId: string, options?: AxiosRequestConfig) => {
  return (_: string, { arg }: { arg: Arguments }): Promise<AxiosResponse<StudentPublic>> => {
    return studentJoinRoomJoinRoomRoomIdPost(roomId, arg as StudentRegister, options);
  }
}
export const getStudentJoinRoomJoinRoomRoomIdPostMutationKey = (roomId: string,) => `/join/room/${roomId}` as const;

export type StudentJoinRoomJoinRoomRoomIdPostMutationResult = NonNullable<Awaited<ReturnType<typeof studentJoinRoomJoinRoomRoomIdPost>>>
export type StudentJoinRoomJoinRoomRoomIdPostMutationError = AxiosError<HTTPValidationError>

/**
 * @summary Student Join Room
 */
export const useStudentJoinRoomJoinRoomRoomIdPost = <TError = AxiosError<HTTPValidationError>>(
  roomId: string, options?: { swr?:SWRMutationConfiguration<Awaited<ReturnType<typeof studentJoinRoomJoinRoomRoomIdPost>>, TError, string, Arguments, Awaited<ReturnType<typeof studentJoinRoomJoinRoomRoomIdPost>>> & { swrKey?: string }, axios?: AxiosRequestConfig }
) => {

  const {swr: swrOptions, axios: axiosOptions} = options ?? {}

  const swrKey = swrOptions?.swrKey ?? getStudentJoinRoomJoinRoomRoomIdPostMutationKey(roomId);
  const swrFn = getStudentJoinRoomJoinRoomRoomIdPostMutationFetcher(roomId,axiosOptions);

  const query = useSWRMutation(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
